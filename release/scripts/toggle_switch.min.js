/*! toggle-switch 12-10-2015 */
(function(){"use strict";angular.module("sc-toggle-switch",["sc-toggle-switch-template"]).directive("toggleSwitchDirective",function($templateCache){return{restrict:"EA",templateUrl:"src/html_template/toggle_switch_template.html",controller:"toggleSwitchController",require:"ngModel",scope:{isDisabled:"=?",isSummarised:"=?",isAnimated:"=?",switchSize:"@",leftLabel:"@",rightLabel:"@",knobLabel:"@",leftLabelColor:"@",rightLabelColor:"@",leftValue:"=?",rightValue:"=?",knobLabelColor:"@",borderColor:"@"},compile:function(tElement,tAttrs){var postLink;return angular.isUndefined(tAttrs.isSummarised)&&(tAttrs.isSummarised="false"),angular.isUndefined(tAttrs.isDisabled)&&(tAttrs.isDisabled="false"),angular.isUndefined(tAttrs.isAnimated)&&(tAttrs.isAnimated="true"),angular.isUndefined(tAttrs.switchSize)?tAttrs.switchSize="switch-medium":tAttrs.switchSize.match("^(xsmall|small|medium|large|xlarge)$")?tAttrs.switchSize="switch-"+tAttrs.switchSize:(console.log("Error: switch-size must xsmall|small|medium|large|xlarge"),tAttrs.switchSize="switch-medium"),angular.isUndefined(tAttrs.leftLabel)&&(tAttrs.leftLabel="On"),angular.isUndefined(tAttrs.rightLabel)&&(tAttrs.rightLabel="Off"),angular.isUndefined(tAttrs.knobLabel)&&(tAttrs.knobLabel=" "),angular.isUndefined(tAttrs.leftLabelColor)&&(tAttrs.leftLabelColor="blue"),angular.isUndefined(tAttrs.rightLabelColor)&&(tAttrs.rightLabelColor="red"),angular.isUndefined(tAttrs.knobLabelColor)&&(tAttrs.knobLabelColor="white"),angular.isUndefined(tAttrs.borderColor)&&(tAttrs.borderColor="gray"),angular.isUndefined(tAttrs.leftValue)&&(tAttrs.leftValue="true"),angular.isUndefined(tAttrs.rightValue)&&(tAttrs.rightValue="false"),postLink=function(scope,iElement,iAttrs,ngModelCtrl){return ngModelCtrl.$formatters.push(function(modelValue){return modelValue}),ngModelCtrl.$parsers.push(function(viewValue){return viewValue}),ngModelCtrl.$render=function(){return scope.model=ngModelCtrl.$viewValue},scope.$watch("model",function(value){return null!=value?(value===scope.leftValue?scope.switchStatus="switch-on":scope.switchStatus="switch-off",ngModelCtrl.$setViewValue(scope.model)):scope.switchStatus="switch-undef"})}}}}).controller("toggleSwitchController",function($scope){var max;return $scope.localModel=void 0,$scope.updateModel=function(){return $scope.isDisabled?void 0:(void 0===$scope.localModel&&($scope.model===$scope.leftValue?$scope.localModel=!0:$scope.model===$scope.rightValue&&($scope.localModel=!1)),$scope.localModel=!$scope.localModel,$scope.localModel===!0?$scope.model=$scope.leftValue:$scope.localModel===!1?$scope.model=$scope.rightValue:$scope.model=void 0)},max=null,$scope.leftLabelStr=null,$scope.rightLabelStr=null,$scope.knobLabelStr=null,$scope.completeWithSpace=function(maxLength){var results,results1,results2;if($scope.leftLabelStr=null!=$scope.leftLabel?angular.copy($scope.leftLabel):"",$scope.rightLabelStr=null!=$scope.rightLabel?angular.copy($scope.rightLabel):"",$scope.knobLabelStr=null!=$scope.knobLabel?angular.copy($scope.knobLabel):"",max=Math.max($scope.leftLabelStr.length,$scope.rightLabelStr.length,$scope.knobLabelStr.length),$scope.leftLabel.length===max){for(;$scope.rightLabelStr.length<max;)$scope.rightLabelStr=" "+$scope.rightLabelStr+" ";for(results=[];$scope.knobLabelStr.length<max;)results.push($scope.knobLabelStr=" "+$scope.knobLabelStr+" ");return results}if($scope.rightLabel.length===max){for(;$scope.leftLabelStr.length<max;)$scope.leftLabelStr=" "+$scope.leftLabelStr+" ";for(results1=[];$scope.knobLabelStr.length<max;)results1.push($scope.knobLabelStr=" "+$scope.knobLabelStr+" ");return results1}for(;$scope.leftLabelStr.length<max;)$scope.leftLabelStr=" "+$scope.leftLabelStr+" ";for(results2=[];$scope.rightLabelStr.length<max;)results2.push($scope.rightLabelStr=" "+$scope.rightLabelStr+" ");return results2},$scope.$watch("leftLabel",function(){return $scope.completeWithSpace()}),$scope.$watch("rightLabel",function(){return $scope.completeWithSpace()}),$scope.$watch("knobLabel",function(){return $scope.completeWithSpace()})})}).call(this),angular.module("sc-toggle-switch-template",[]).run(["$templateCache",function($templateCache){"use strict";$templateCache.put("src/html_template/toggle_switch_template.html",'<span ng-show=!isSummarised><div class=toggle-switch ng-style="{ \'border-color\': borderColor }" ng-click=updateModel() ng-class="[ switchSize, { \'disabled\' : isDisabled } ]" role=switch aria-checked={{!!model}}><div ng-class="[ switchStatus, { \'switch-animate\' : isAnimated } ]"><span class=switch-left ng-style="{ \'background-color\': leftLabelColor }" ng-bind=leftLabelStr></span> <span class=switch-knob ng-style="{ \'background-color\': knobLabelColor }" ng-bind=knobLabelStr></span> <span class=switch-right ng-style="{ \'background-color\': rightLabelColor }" ng-bind=rightLabelStr></span></div></div></span> <span ng-show=isSummarised><div class=toggle-switch-summarize ng-class=switchSize><span ng-show="model != undefined && model == leftValue" ng-style="{ \'background-color\': leftLabelColor }" class=switch-left>{{leftLabel}}</span> <span ng-show="knobLabel.length > 0" class=switch-knob ng-style="{ \'background-color\': knobLabelColor }">{{knobLabel}}</span> <span ng-show="model != undefined && model == rightValue" ng-style="{ \'background-color\': rightLabelColor }" class=switch-right>{{rightLabel}}</span></div></span>')}]);